//
//  MenuInteractor.swift
//  Capo
//
//  Created by Артем Валиев on 12/12/2018.
//  Copyright (c) 2018 Артем Валиев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MenuBusinessLogic
{
  func doSomething(request: Menu.Something.Request)
}

protocol MenuDataStore
{
  //var name: String { get set }
}

class MenuInteractor: MenuBusinessLogic, MenuDataStore
{
  var presenter: MenuPresentationLogic?
  var worker: MenuWorker?
  //var name: String = ""
  
  // MARK: Do something
  
  func doSomething(request: Menu.Something.Request)
  {
    worker = MenuWorker()
    worker?.doSomeWork()
    
    let response = Menu.Something.Response()
    presenter?.presentSomething(response: response)
  }
}

struct MenuVM {
    
    var selectedCellIndex: Int = 100

    func numberOfRows() -> Int {
        return MenuObject.allCases.count
    }
    
    func textFor(index: Int) -> String {
        return MenuObject(rawValue: index)!.description
    }
    
    func imageFor(index: Int) -> UIImage {
        return MenuObject(rawValue: index)!.image
    }
    
    func getMenuItemFor(index: Int) -> MenuObject {
        return MenuObject(rawValue: index)!
    }
    
    func showDividerFor(index: Int) -> Bool {
        return MenuObject(rawValue: index)!.showDivider
    }
    
    func viewModelForCell(at index: Int) -> MenuCellVM {
        let textForCell = textFor(index: index)
        let imageForCell = imageFor(index: index)
        let showDivider = showDividerFor(index: index)
        let isSelected = selectedCellIndex == index
        let cellVM = MenuCellVM(text: textForCell, isSelected: isSelected, image: imageForCell, showDivider: showDivider)
        return cellVM
    }
}
