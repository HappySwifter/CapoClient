//
//  LoginViewController.swift
//  Capo
//
//  Created by Артем Валиев on 12/12/2018.
//  Copyright (c) 2018 Артем Валиев. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Apollo

protocol LoginDisplayLogic: class
{
  func displaySomething(viewModel: Login.Something.ViewModel)
}

class LoginViewController: UIViewController, LoginDisplayLogic
{
  var interactor: LoginBusinessLogic?
  var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = LoginInteractor()
    let presenter = LoginPresenter()
    let router = LoginRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
    
    @IBOutlet weak var emailField: UITextField!
    @IBOutlet weak var passwordField: UITextField!
    @IBOutlet weak var loginButton: LGButton!
    @IBOutlet weak var registerButton: LGButton!
    
  override func viewDidLoad()
  {
    super.viewDidLoad()
    #if DEBUG
    emailField.text = "Artem"
    passwordField.text = "4005"
    #endif
    
    loginButton.applyLoginSettings(title: "Войти")
    registerButton.applyLoginSettings(title: "Регистрация")

    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = Login.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: Login.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    @IBAction func loginPressed() {
        guard let name = emailField.text, name.count > 0 else {
            return
        }
        guard let password = passwordField.text, password.count > 0 else {
            return
        }
        
        let loginMut = LoginMutation(email: name, password: password)
        apollo.client.perform(mutation: loginMut) { res, error in
            presentGraph(errors: res?.errors, error: error)
            guard let data = res?.data else { return }
            if let token = data.loginUser?.string, let userPayload = data.loginUser?.user?.fragments.userPayload {
                let user = User.saveUser(data: userPayload)
                CurrentUser.save(user: user, token: token)
                
                
                print(CurrentUser.getToken())
                print(CurrentUser.getUser())
            }
            
        }
    }
    
    @IBAction func registerPressed() {
        router?.routeToRegisterController()
    }
}


